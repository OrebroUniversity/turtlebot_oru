<?xml version="1.0"?>
<launch>

  <arg name="robot_id" default="1" />
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg if="$(arg debug)" name="launch_prefix"
    value="gdb --ex run --args" />
    
  <group ns="turtlebot$(arg robot_id)">
    <param name="tf_prefix" value="turtlebot$(arg robot_id)" />
    <!-- Turtlebot bringup -->

    <include
        file="$(find turtlebot_bringup)/launch/minimal.launch">
      <arg name="3d_sensor" value="kinect" />
    </include>

    <param name="mobile_base/odom_frame" value="turtlebot$(arg robot_id)/odom"/>
    <param name="mobile_base/base_frame" value="turtlebot$(arg robot_id)/base_footprint"/>

    <arg name="num_worker_threads" default="4" />                                                     

    <include file="$(find freenect_launch)/launch/freenect_tf_prefix.launch">
      <arg name="tf_prefix" value="turtlebot$(arg robot_id)" />
      <arg name="camera"                          value="camera"/>                             
      <arg name="publish_tf"                      value="false"/>                         
      <arg name="depth_registration"              value="false"/>                 
      <arg name="num_worker_threads"              value="$(arg num_worker_threads)" />                
      
      <!-- Processing Modules -->                                                                     
      <arg name="rgb_processing"                  value="true"/>                     
      <arg name="ir_processing"                   value="true"/>                      
      <arg name="depth_processing"                value="true"/>                   
      <arg name="depth_registered_processing"     value="false"/>        
    </include>

    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet camera/camera_nodelet_manager">
      <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
           return the minimum value for those pixels centered vertically in the image. -->
      <param name="scan_height" value="10"/>
      <param name="output_frame_id" value="turtlebot$(arg robot_id)/camera_depth_frame"/>
      <param name="range_min" value="0.45"/>
      <remap from="image" to="camera/depth/image_raw"/>
      <remap from="camera/image" to="camera/depth/image_raw"/>
    </node>

  </group>

</launch>
